
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: dev
  name: db-mysql57
  annotations:
    k8s.kuboard.cn/workload: db-mysql57
    deployment.kubernetes.io/revision: '2'
    k8s.eip.work/ingress: 'false'
    k8s.eip.work/service: NodePort
    k8s.eip.work/workload: db-mysql57
    kubectl.kubernetes.io/last-applied-configuration: >
      {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"deployment.kubernetes.io/revision":"1","k8s.eip.work/ingress":"true","k8s.eip.work/service":"NodePort","k8s.eip.work/workload":"db-mysql57"},"labels":{"k8s.eip.work/layer":"db","k8s.eip.work/name":"db-mysql57"},"name":"db-mysql57","namespace":"dev","resourceVersion":"3019738"},"spec":{"progressDeadlineSeconds":600,"replicas":1,"revisionHistoryLimit":10,"selector":{"matchLabels":{"k8s.eip.work/layer":"db","k8s.eip.work/name":"db-mysql57"}},"strategy":{"rollingUpdate":{"maxSurge":"25%","maxUnavailable":"25%"},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"k8s.eip.work/layer":"db","k8s.eip.work/name":"db-mysql57"}},"spec":{"containers":[{"env":[{"name":"MYSQL_ROOT_PASSWORD","value":"Mysql-2019"}],"image":"mysql:5.7","imagePullPolicy":"IfNotPresent","name":"mysql57","ports":[{"containerPort":3306,"protocol":"TCP"}],"resources":{"limits":{},"requests":{}},"volumeMounts":[{"mountPath":"/var/lib/mysql","name":"mysql-pv","readOnly":false}]}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","terminationGracePeriodSeconds":30,"volumes":[{"name":"mysql-pv","persistentVolumeClaim":{"claimName":"mysql"}}]}}}}
    k8s.kuboard.cn/service: NodePort
    k8s.kuboard.cn/ingress: 'false'
  labels:
    k8s.eip.work/layer: db
    k8s.eip.work/name: db-mysql57
spec:
  selector:
    matchLabels:
      k8s.eip.work/layer: db
      k8s.eip.work/name: db-mysql57
  revisionHistoryLimit: 10
  template:
    metadata:
      labels:
        k8s.eip.work/layer: db
        k8s.eip.work/name: db-mysql57
    spec:
      securityContext:
        seLinuxOptions: {}
      imagePullSecrets: []
      restartPolicy: Always
      initContainers: []
      containers:
        - image: 'mysql:5.7'
          imagePullPolicy: IfNotPresent
          name: mysql57
          volumeMounts:
            - name: mysql-pv
              mountPath: /var/lib/mysql
            - name: mysql-pv
              mountPath: /etc/mysql/mysql.conf.d
              subPath: mysql.conf.d
          resources:
            limits:
            requests:
          env:
            - name: MYSQL_ROOT_PASSWORD
              value: Mysql-2019
          lifecycle: {}
          ports:
            - hostPort: 3306
              containerPort: 3306
              protocol: TCP
      volumes:
        - name: mysql-pv
          nfs:
            server: 172.16.114.245
            path: /data/nfs/dev/dev-mysql-pvc
      dnsPolicy: ClusterFirst
      dnsConfig: {}
      nodeName: techserver02
      terminationGracePeriodSeconds: 30
  progressDeadlineSeconds: 600
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  replicas: 0

---
apiVersion: v1
kind: Service
metadata:
  namespace: dev
  name: db-mysql57
  annotations:
    k8s.kuboard.cn/workload: db-mysql57
    k8s.eip.work/workload: db-mysql57
    kubectl.kubernetes.io/last-applied-configuration: >-
      {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"k8s.eip.work/workload":"db-mysql57"},"labels":{"k8s.eip.work/layer":"db","k8s.eip.work/name":"db-mysql57"},"name":"db-mysql57","namespace":"dev","resourceVersion":"3019200"},"spec":{"clusterIP":"10.96.156.230","ports":[{"name":"jciqtp","nodePort":12321,"port":80,"protocol":"TCP","targetPort":3306}],"selector":{"k8s.eip.work/layer":"db","k8s.eip.work/name":"db-mysql57"},"type":"NodePort"}}
  labels:
    k8s.eip.work/layer: db
    k8s.eip.work/name: db-mysql57
spec:
  selector:
    k8s.eip.work/layer: db
    k8s.eip.work/name: db-mysql57
  type: NodePort
  ports:
    - port: 3306
      targetPort: 3306
      protocol: TCP
      name: jciqtp
      nodePort: 12321

---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: dev
  name: db-phpmyadmin
  annotations:
    k8s.kuboard.cn/workload: db-phpmyadmin
    deployment.kubernetes.io/revision: '1'
    k8s.eip.work/ingress: 'true'
    k8s.eip.work/service: NodePort
    k8s.eip.work/workload: db-phpmyadmin
    kubectl.kubernetes.io/last-applied-configuration: >
      {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"deployment.kubernetes.io/revision":"6","k8s.eip.work/ingress":"true","k8s.eip.work/service":"NodePort","k8s.eip.work/workload":"db-phpmyadmin"},"labels":{"k8s.eip.work/layer":"db","k8s.eip.work/name":"db-phpmyadmin"},"name":"db-phpmyadmin","namespace":"dev","resourceVersion":"3046112"},"spec":{"progressDeadlineSeconds":600,"replicas":1,"revisionHistoryLimit":10,"selector":{"matchLabels":{"k8s.eip.work/layer":"db","k8s.eip.work/name":"db-phpmyadmin"}},"strategy":{"rollingUpdate":{"maxSurge":"25%","maxUnavailable":"25%"},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"k8s.eip.work/layer":"db","k8s.eip.work/name":"db-phpmyadmin"}},"spec":{"containers":[{"env":[{"name":"PMA_HOST","value":"10.96.156.230"},{"name":"PMA_PORT","value":"3306"}],"image":"phpmyadmin/phpmyadmin","imagePullPolicy":"IfNotPresent","name":"phpmyadmin","ports":[{"containerPort":80,"protocol":"TCP"}],"resources":{"limits":{},"requests":{}}}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","terminationGracePeriodSeconds":30}}}}
    k8s.kuboard.cn/service: NodePort
    k8s.kuboard.cn/ingress: 'true'
  labels:
    k8s.eip.work/layer: db
    k8s.eip.work/name: db-phpmyadmin
spec:
  selector:
    matchLabels:
      k8s.eip.work/layer: db
      k8s.eip.work/name: db-phpmyadmin
  revisionHistoryLimit: 10
  template:
    metadata:
      labels:
        k8s.eip.work/layer: db
        k8s.eip.work/name: db-phpmyadmin
    spec:
      securityContext:
        seLinuxOptions: {}
      imagePullSecrets: []
      restartPolicy: Always
      initContainers: []
      containers:
        - image: phpmyadmin/phpmyadmin
          imagePullPolicy: IfNotPresent
          name: phpmyadmin
          volumeMounts: []
          resources:
            limits:
            requests:
          env:
            - name: PMA_HOST
              value: 10.96.156.230
            - name: PMA_PORT
              value: '3306'
          lifecycle: {}
          ports:
            - containerPort: 80
              protocol: TCP
      volumes: []
      dnsPolicy: ClusterFirst
      dnsConfig:
        options: []
      terminationGracePeriodSeconds: 30
  progressDeadlineSeconds: 600
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  replicas: 0

---
apiVersion: v1
kind: Service
metadata:
  namespace: dev
  name: db-phpmyadmin
  annotations:
    k8s.kuboard.cn/workload: db-phpmyadmin
    k8s.eip.work/workload: db-phpmyadmin
    kubectl.kubernetes.io/last-applied-configuration: >-
      {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"k8s.eip.work/workload":"db-phpmyadmin"},"labels":{"k8s.eip.work/layer":"db","k8s.eip.work/name":"db-phpmyadmin"},"name":"db-phpmyadmin","namespace":"dev","resourceVersion":"3046073"},"spec":{"clusterIP":"10.96.248.218","ports":[{"name":"3a4yqt","nodePort":30730,"port":80,"protocol":"TCP","targetPort":80}],"selector":{"k8s.eip.work/layer":"db","k8s.eip.work/name":"db-phpmyadmin"},"type":"NodePort"}}
  labels:
    k8s.eip.work/layer: db
    k8s.eip.work/name: db-phpmyadmin
spec:
  selector:
    k8s.eip.work/layer: db
    k8s.eip.work/name: db-phpmyadmin
  type: NodePort
  ports:
    - port: 80
      targetPort: 80
      protocol: TCP
      name: 3a4yqt
      nodePort: 30730

---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  namespace: dev
  name: db-phpmyadmin
  annotations:
    k8s.kuboard.cn/workload: db-phpmyadmin
    k8s.eip.work/workload: db-phpmyadmin
  labels:
    k8s.eip.work/layer: db
    k8s.eip.work/name: db-phpmyadmin
spec:
  rules:
    - host: myadmin.dev.hankutech.com
      http:
        paths:
          - path: /
            backend:
              serviceName: db-phpmyadmin
              servicePort: 3a4yqt

---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: dev
  name: nexus3
  annotations:
    k8s.kuboard.cn/workload: nexus3
    deployment.kubernetes.io/revision: '12'
    k8s.eip.work/ingress: 'true'
    k8s.eip.work/service: NodePort
    k8s.eip.work/workload: nexus3
    k8s.kuboard.cn/service: NodePort
    k8s.kuboard.cn/ingress: 'true'
  labels:
    k8s.eip.work/layer: ''
    k8s.eip.work/name: nexus3
spec:
  selector:
    matchLabels:
      k8s.eip.work/layer: ''
      k8s.eip.work/name: nexus3
  revisionHistoryLimit: 10
  template:
    metadata:
      labels:
        k8s.eip.work/layer: ''
        k8s.eip.work/name: nexus3
    spec:
      securityContext:
        seLinuxOptions: {}
      imagePullSecrets: []
      restartPolicy: Always
      initContainers: []
      containers:
        - image: 'sonatype/nexus3:latest'
          imagePullPolicy: IfNotPresent
          name: nexus3
          volumeMounts:
            - name: nexuspv
              mountPath: /nexus-data
          resources:
            limits:
              cpu: 400m
              memory: 2Gi
            requests:
              cpu: 400m
              memory: 512Mi
          env: []
          lifecycle: {}
          ports:
            - containerPort: 8081
              protocol: TCP
      volumes:
        - name: nexuspv
          nfs:
            server: 172.16.114.245
            path: /data/nfs/dev/dev-nexus
      dnsPolicy: ClusterFirst
      dnsConfig: {}
      nodeName: techserver02
      terminationGracePeriodSeconds: 30
  progressDeadlineSeconds: 600
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  replicas: 0

---
apiVersion: v1
kind: Service
metadata:
  namespace: dev
  name: nexus3
  annotations:
    k8s.kuboard.cn/workload: nexus3
    k8s.eip.work/workload: nexus3
  labels:
    k8s.eip.work/layer: ''
    k8s.eip.work/name: nexus3
spec:
  selector:
    k8s.eip.work/layer: ''
    k8s.eip.work/name: nexus3
  type: NodePort
  ports:
    - port: 8081
      targetPort: 8081
      protocol: TCP
      name: eekmcs
      nodePort: 39711

---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  namespace: dev
  name: nexus3
  annotations:
    k8s.kuboard.cn/workload: nexus3
    k8s.eip.work/workload: nexus3
    nginx.ingress.kubernetes.io/proxy-body-size: 500m
  labels:
    k8s.eip.work/layer: ''
    k8s.eip.work/name: nexus3
spec:
  rules:
    - host: nexus3.dev.hankutech.com
      http:
        paths:
          - path: /
            backend:
              serviceName: nexus3
              servicePort: eekmcs

---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: dev
  name: web-portal
  annotations:
    k8s.kuboard.cn/workload: web-portal
    deployment.kubernetes.io/revision: '2'
    k8s.eip.work/ingress: 'true'
    k8s.eip.work/service: NodePort
    k8s.eip.work/workload: web-portal
    kubectl.kubernetes.io/last-applied-configuration: >
      {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"deployment.kubernetes.io/revision":"1","k8s.eip.work/ingress":"true","k8s.eip.work/service":"NodePort","k8s.eip.work/workload":"web-portal"},"labels":{"k8s.eip.work/layer":"web","k8s.eip.work/name":"web-portal"},"name":"web-portal","namespace":"dev","resourceVersion":"3012919"},"spec":{"progressDeadlineSeconds":600,"replicas":1,"revisionHistoryLimit":10,"selector":{"matchLabels":{"k8s.eip.work/layer":"web","k8s.eip.work/name":"web-portal"}},"strategy":{"rollingUpdate":{"maxSurge":"25%","maxUnavailable":"25%"},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"k8s.eip.work/layer":"web","k8s.eip.work/name":"web-portal"}},"spec":{"containers":[{"image":"nginx:1.17","imagePullPolicy":"IfNotPresent","name":"portal","ports":[{"containerPort":80,"protocol":"TCP"}],"resources":{"limits":{},"requests":{}},"volumeMounts":[{"mountPath":"/etc/nginx/conf.d","name":"portal-pv","readOnly":false},{"mountPath":"/portal-data","name":"portal-pv","readOnly":false}]}],"dnsConfig":{},"dnsPolicy":"ClusterFirst","restartPolicy":"Always","terminationGracePeriodSeconds":30,"volumes":[{"name":"portal-pv","persistentVolumeClaim":{"claimName":"portal"}}]}}}}
    k8s.kuboard.cn/service: NodePort
    k8s.kuboard.cn/ingress: 'true'
  labels:
    k8s.eip.work/layer: web
    k8s.eip.work/name: web-portal
spec:
  selector:
    matchLabels:
      k8s.eip.work/layer: web
      k8s.eip.work/name: web-portal
  revisionHistoryLimit: 10
  template:
    metadata:
      labels:
        k8s.eip.work/layer: web
        k8s.eip.work/name: web-portal
    spec:
      securityContext:
        seLinuxOptions: {}
      imagePullSecrets: []
      restartPolicy: Always
      initContainers: []
      containers:
        - image: 'nginx:1.17'
          imagePullPolicy: IfNotPresent
          name: portal
          volumeMounts:
            - name: portal-pv
              mountPath: /etc/nginx/conf.d
            - name: portal-pv
              mountPath: /portal-data
          resources:
            limits:
            requests:
          env: []
          lifecycle: {}
          ports:
            - containerPort: 80
              protocol: TCP
      volumes:
        - name: portal-pv
          nfs:
            server: 172.16.114.245
            path: /data/nfs/dev/dev-portal-pvc
      dnsPolicy: ClusterFirst
      dnsConfig: {}
      terminationGracePeriodSeconds: 30
  progressDeadlineSeconds: 600
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  replicas: 0

---
apiVersion: v1
kind: Service
metadata:
  namespace: dev
  name: web-portal
  annotations:
    k8s.kuboard.cn/workload: web-portal
    k8s.eip.work/workload: web-portal
    kubectl.kubernetes.io/last-applied-configuration: >-
      {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{"k8s.eip.work/workload":"web-portal"},"labels":{"k8s.eip.work/layer":"web","k8s.eip.work/name":"web-portal"},"name":"web-portal","namespace":"dev","resourceVersion":"3012895"},"spec":{"clusterIP":"10.96.74.173","ports":[{"name":"xydx8n","nodePort":32840,"port":80,"protocol":"TCP","targetPort":80}],"selector":{"k8s.eip.work/layer":"web","k8s.eip.work/name":"web-portal"},"type":"NodePort"}}
  labels:
    k8s.eip.work/layer: web
    k8s.eip.work/name: web-portal
spec:
  selector:
    k8s.eip.work/layer: web
    k8s.eip.work/name: web-portal
  type: NodePort
  ports:
    - port: 80
      targetPort: 80
      protocol: TCP
      name: xydx8n
      nodePort: 32840

---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  namespace: dev
  name: web-portal
  annotations:
    k8s.kuboard.cn/workload: web-portal
    k8s.eip.work/workload: web-portal
  labels:
    k8s.eip.work/layer: web
    k8s.eip.work/name: web-portal
spec:
  rules:
    - host: portal.dev.hankutech.com
      http:
        paths:
          - path: /
            backend:
              serviceName: web-portal
              servicePort: xydx8n
    - host: dev.hankutech.com
      http:
        paths:
          - path: /
            backend:
              serviceName: web-portal
              servicePort: xydx8n

